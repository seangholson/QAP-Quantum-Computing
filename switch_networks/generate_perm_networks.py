import numpy as np
from sympy.combinatorics.permutations import Permutation
Permutation.print_cyclic = True

previous_switch_list = [[[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[2, 3], [6, 7], [10, 11], [14, 15], [18, 19], [22, 23], [26, 27], [30, 31], [34, 35], [38, 39], [42, 43], [46, 47], [50, 51], [54, 55], [58, 59], [62, 63]], [[2, 3], [4, 5], [6, 7], [10, 11], [12, 13], [14, 15], [18, 19], [20, 21], [22, 23], [26, 27], [28, 29], [30, 31], [34, 35], [36, 37], [38, 39], [42, 43], [44, 45], [46, 47], [50, 51], [52, 53], [54, 55], [58, 59], [60, 61], [62, 63]], [[2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]], [[2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]]]
previous_swap_list = [[[1, 32], [1, 16], [1, 8], [1, 4], [1, 2], [3, 33], [3, 48], [3, 24], [3, 12], [3, 6], [5, 34], [5, 17], [5, 40], [5, 20], [5, 10], [7, 35], [7, 49], [7, 56], [7, 28], [7, 14], [9, 36], [9, 18], [11, 37], [11, 50], [11, 25], [11, 44], [11, 22], [13, 38], [13, 19], [13, 41], [13, 52], [13, 26], [15, 39], [15, 51], [15, 57], [15, 60], [15, 30], [21, 42], [23, 43], [23, 53], [23, 58], [23, 29], [23, 46], [27, 45], [27, 54], [31, 47], [31, 55], [31, 59], [31, 61], [31, 62]], [[1, 16], [1, 8], [1, 4], [1, 2], [3, 17], [3, 24], [3, 12], [3, 6], [5, 18], [5, 9], [5, 20], [5, 10], [7, 19], [7, 25], [7, 28], [7, 14], [11, 21], [11, 26], [11, 13], [11, 22], [15, 23], [15, 27], [15, 29], [15, 30], [33, 48], [33, 40], [33, 36], [33, 34], [35, 49], [35, 56], [35, 44], [35, 38], [37, 50], [37, 41], [37, 52], [37, 42], [39, 51], [39, 57], [39, 60], [39, 46], [43, 53], [43, 58], [43, 45], [43, 54], [47, 55], [47, 59], [47, 61], [47, 62]], [[1, 8], [1, 4], [1, 2], [3, 9], [3, 12], [3, 6], [5, 10], [7, 11], [7, 13], [7, 14], [17, 24], [17, 20], [17, 18], [19, 25], [19, 28], [19, 22], [21, 26], [23, 27], [23, 29], [23, 30], [33, 40], [33, 36], [33, 34], [35, 41], [35, 44], [35, 38], [37, 42], [39, 43], [39, 45], [39, 46], [49, 56], [49, 52], [49, 50], [51, 57], [51, 60], [51, 54], [53, 58], [55, 59], [55, 61], [55, 62]], [[1, 4], [1, 2], [3, 5], [3, 6], [9, 12], [9, 10], [11, 13], [11, 14], [17, 20], [17, 18], [19, 21], [19, 22], [25, 28], [25, 26], [27, 29], [27, 30], [33, 36], [33, 34], [35, 37], [35, 38], [41, 44], [41, 42], [43, 45], [43, 46], [49, 52], [49, 50], [51, 53], [51, 54], [57, 60], [57, 58], [59, 61], [59, 62]], [[1, 2], [5, 6], [9, 10], [13, 14], [17, 18], [21, 22], [25, 26], [29, 30], [33, 34], [37, 38], [41, 42], [45, 46], [49, 50], [53, 54], [57, 58], [61, 62]], [[1, 2], [5, 6], [9, 10], [13, 14], [17, 18], [21, 22], [25, 26], [29, 30], [33, 34], [37, 38], [41, 42], [45, 46], [49, 50], [53, 54], [57, 58], [61, 62]], [[3, 6], [3, 5], [1, 2], [1, 4], [11, 14], [11, 13], [9, 10], [9, 12], [19, 22], [19, 21], [17, 18], [17, 20], [27, 30], [27, 29], [25, 26], [25, 28], [35, 38], [35, 37], [33, 34], [33, 36], [43, 46], [43, 45], [41, 42], [41, 44], [51, 54], [51, 53], [49, 50], [49, 52], [59, 62], [59, 61], [57, 58], [57, 60]], [[7, 14], [7, 13], [7, 11], [5, 10], [3, 6], [3, 12], [3, 9], [1, 2], [1, 4], [1, 8], [23, 30], [23, 29], [23, 27], [21, 26], [19, 22], [19, 28], [19, 25], [17, 18], [17, 20], [17, 24], [39, 46], [39, 45], [39, 43], [37, 42], [35, 38], [35, 44], [35, 41], [33, 34], [33, 36], [33, 40], [55, 62], [55, 61], [55, 59], [53, 58], [51, 54], [51, 60], [51, 57], [49, 50], [49, 52], [49, 56]], [[15, 30], [15, 29], [15, 27], [15, 23], [11, 22], [11, 13], [11, 26], [11, 21], [7, 14], [7, 28], [7, 25], [7, 19], [5, 10], [5, 20], [5, 9], [5, 18], [3, 6], [3, 12], [3, 24], [3, 17], [1, 2], [1, 4], [1, 8], [1, 16], [47, 62], [47, 61], [47, 59], [47, 55], [43, 54], [43, 45], [43, 58], [43, 53], [39, 46], [39, 60], [39, 57], [39, 51], [37, 42], [37, 52], [37, 41], [37, 50], [35, 38], [35, 44], [35, 56], [35, 49], [33, 34], [33, 36], [33, 40], [33, 48]], [[31, 62], [31, 61], [31, 59], [31, 55], [31, 47], [27, 54], [27, 45], [23, 46], [23, 29], [23, 58], [23, 53], [23, 43], [21, 42], [15, 30], [15, 60], [15, 57], [15, 51], [15, 39], [13, 26], [13, 52], [13, 41], [13, 19], [13, 38], [11, 22], [11, 44], [11, 25], [11, 50], [11, 37], [9, 18], [9, 36], [7, 14], [7, 28], [7, 56], [7, 49], [7, 35], [5, 10], [5, 20], [5, 40], [5, 17], [5, 34], [3, 6], [3, 12], [3, 24], [3, 48], [3, 33], [1, 2], [1, 4], [1, 8], [1, 16], [1, 32]], [[0, 0]]]


previous_n = 64

# Generates middle switches from previous list
for i in range(len(previous_switch_list)):
    for j in range(len(previous_switch_list[i])):
        previous_switch_list[i].append([int(previous_switch_list[i][j][0] + previous_n),
                                        int(previous_switch_list[i][j][1] + previous_n)])

# Adds first and last set of switches necessary for the next list of switches
previous_switch_list.insert(0, previous_switch_list[1])
last_switch_stage = previous_switch_list[0].copy()
last_switch_stage.remove([0, 1])
previous_switch_list.append(last_switch_stage)
next_switch_list = previous_switch_list

# Generates middle swaps from previous list
for i in range(len(previous_swap_list) - 1):
    for j in range(len(previous_swap_list[i])):
        previous_swap_list[i].append([int(previous_swap_list[i][j][0] + previous_n),
                                      int(previous_swap_list[i][j][1] + previous_n)])


# creates map of swaps
p = list(range(previous_n*2))
even_list = list(filter(lambda x: x % 2 == 0, p))
odd_list = list(filter(lambda x: x % 2, p))
mapped_p = np.concatenate((even_list, odd_list))

# converts map into permutation
k = Permutation(mapped_p)

# converts permutation into list of transpositions
t = list(Permutation(k).transpositions())

# converts transpositions from tuple to list
for i in range(len(t)):
    t[i] = list(t[i])

# takes previous transpositions and forms inverse for last set of swaps
t_inverse = t.copy()
t_inverse.reverse()

previous_swap_list.insert(0, t)
previous_swap_list.insert(-1, t_inverse)
next_swap_list = previous_swap_list

next_n = 2*previous_n

print("Next N:", next_n)
print("Next Switch list:", next_switch_list)
print("Next Swap List:", next_swap_list)


